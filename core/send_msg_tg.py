import requests
from django.conf import settings
from django.db.models import Count

from core.models import Bouquet, Courier, Florist
from project_prime_flower_shop.settings import TELEGRAM_DEFAULT_CHAT_ID


def get_employee_chat_id(role):
    if role == 'florist':
        florist = Florist.objects.filter(is_active=True).annotate(
            num_consultations=Count('consultation')
        ).order_by('num_consultations').first()
        return florist.tg_chat_id if florist else None

    elif role == 'courier':
        courier = Courier.objects.filter(is_active=True).annotate(
            num_orders=Count('order')
        ).order_by('num_orders').first()
        return courier.tg_chat_id if courier else None


def send_msg_to_florist(consultation, quiz_results=None):
    created_at_str = consultation.created_at.strftime("%d.%m.%Y %H:%M")

    base_message = (
        f"üå∏ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –¥–ª—è —Ñ–ª–æ—Ä–∏—Å—Ç–∞!\n"
        f"üë§ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: {consultation.customer.name}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {consultation.customer.phone_number}\n"
        f"üìÖ –î–∞—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è: {created_at_str}\n"
        f"üÜî ID –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: {consultation.id}\n"
    )

    if quiz_results:
        ru_occasion = dict(Bouquet.OCCASIONS).get(quiz_results.get('occasion'), '‚Äî')
        ru_budget = dict(Bouquet.BUDGETS).get(quiz_results.get('budget'), '‚Äî')
        base_message += (
            f"üéÅ –ü–æ–≤–æ–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏: {ru_occasion}\n"
            f"üí∞ –ë—é–¥–∂–µ—Ç: {ru_budget}\n"
        )

    florist = None
    chat_id = get_employee_chat_id("florist")
    if chat_id:
        florist = Florist.objects.filter(tg_chat_id=chat_id).first()

    telegram_url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/sendMessage"

    if florist:
        response = requests.post(
            telegram_url,
            data={"chat_id": florist.tg_chat_id, "text": base_message}
        )

        if response.status_code == 200 and response.json().get("ok", False):
            consultation.florist = florist
            consultation.save()
        else:
            send_fallback_message(base_message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ñ–ª–æ—Ä–∏—Å—Ç—É")
    else:
        send_fallback_message(base_message, "–§–ª–æ—Ä–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")


def send_msg_to_courier(order):
    created_at_str = order.created_at.strftime("%d.%m.%Y %H:%M")

    base_message = (
        f"üöö –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞!\n"
        f"üë§ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: {order.customer.name}\n"
        f"üÜî –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞: {order.id}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {order.customer.phone_number}\n"
        f"üìÖ –î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: {created_at_str}\n"
        f"üí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {order.amount}\n"
    )

    courier = None
    chat_id = get_employee_chat_id("courier")
    if chat_id:
        courier = Courier.objects.filter(tg_chat_id=chat_id).first()

    telegram_url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/sendMessage"

    if courier:
        response = requests.post(
            telegram_url,
            data={"chat_id": courier.tg_chat_id, "text": base_message}
        )

        if response.status_code == 200 and response.json().get("ok", False):
            order.courier = courier
            order.save()
        else:
            send_fallback_message(base_message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä—É")
    else:
        send_fallback_message(base_message, "–ö—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")


def send_fallback_message(base_message, reason):
    message = (
        base_message
        + "\n‚ö†Ô∏è " + reason
        + "\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."
    )

    telegram_url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/sendMessage"
    requests.post(
        telegram_url,
        data={"chat_id": TELEGRAM_DEFAULT_CHAT_ID, "text": message}
    )
